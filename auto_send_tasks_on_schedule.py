import config
from bot_instance import task_data
from task_storage import assign_task

# ========= –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–¥–∞—á –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é =========
def send_control_panel_tasks(bot):
    # –°–ª–æ–≤–∞—Ä—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    sent_tasks = {}

    for group_name, performers in config.performers_by_group.items():
        tasks_text = config.daily_tasks.get(group_name)
        if not tasks_text:
            continue
        for performer in performers:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–ª—É—á–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —ç—Ç—É –∑–∞–¥–∞—á—É
            if performer in sent_tasks and sent_tasks[performer] == tasks_text:
                continue

            try:
                msg = bot.send_message(performer, f"üìå <b>–ó–∞–¥–∞—á–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:</b>\n{tasks_text}", parse_mode="HTML")
                assign_task(performer, tasks_text, msg.message_id)
                task_data[performer] = {"task_text": tasks_text}
                # –û—Ç–º–µ—á–∞–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏–ª —ç—Ç—É –∑–∞–¥–∞—á—É
                sent_tasks[performer] = tasks_text
            except Exception as e:
                print(f"‚ö† –û—à–∏–±–∫–∞: {e}")
