import re
import importlib
import config
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton

def handle_cmnd_set_time(bot, is_admin, restart_scheduler):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥—ã /set_time"""

    # ========= –ö–æ–º–∞–Ω–¥–∞ /set_time =========
    @bot.message_handler(commands=['set_time'])
    def handle_set_time(message):
        """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–¥–∞–Ω–∏–π."""
        if not is_admin(message.from_user.id):
            bot.send_message(message.chat.id, "‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∏–∑–º–µ–Ω—è—Ç—å –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–¥–∞–Ω–∏–π.")
            return

        # –í—ã–≤–æ–¥ —Ç–µ–∫—É—â–µ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
        current_schedule = "\n".join(config.work_time)
        current_status = "‚úÖ –í–∫–ª—é—á–µ–Ω–∞" if config.status_work_time == "on" else "‚õî –í—ã–∫–ª—é—á–µ–Ω–∞"
        # bot.send_message(message.chat.id, f"üïí –¢–µ–∫—É—â–µ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ:\n{current_schedule}\n ")

        bot.send_message(
            message.chat.id,
            f"üïí –¢–µ–∫—É—â–µ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ:\n{current_schedule}\n \nüîÑ *–°—Ç–∞—Ç—É—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏:* {current_status}\n\n",
            parse_mode="Markdown",
        )

        # –°–æ–∑–¥–∞–Ω–∏–µ inline-–∫–Ω–æ–ø–æ–∫
        keyboard = InlineKeyboardMarkup()
        keyboard.add(
            InlineKeyboardButton("‚úÖ –î–∞", callback_data="change_time"),
            InlineKeyboardButton("‚ùå –ù–µ—Ç", callback_data="cancel_time")
        )

        bot.send_message(message.chat.id, "–ñ–µ–ª–∞–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–¥–∞–Ω–∏–π?",
                         reply_markup=keyboard)

    # ========= –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π "–î–∞" / "–ù–µ—Ç" =========
    @bot.callback_query_handler(func=lambda call: call.data in ["change_time", "cancel_time"])
    def process_time_change(call):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–∏–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è –∏–ª–∏ –æ—Å—Ç–∞–≤–∏—Ç—å —Ç–µ–∫—É—â–µ–µ)."""
        if not is_admin(call.from_user.id):
            bot.answer_callback_query(call.id, "‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∏–∑–º–µ–Ω—è—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.")
            return

        if call.data == "change_time":
            # –£–¥–∞–ª—è–µ–º inline-–∫–Ω–æ–ø–∫–∏, –Ω–æ –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
            bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=None)

            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–æ–≤–æ–µ –≤—Ä–µ–º—è
            bot.send_message(call.message.chat.id,
                             "‚è≥ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ 'HH:MM HH:MM HH:MM' (—á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª):")
            bot.register_next_step_handler(call.message, update_schedule)

        elif call.data == "cancel_time":
            bot.edit_message_text("‚ùå –ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.", call.message.chat.id, call.message.message_id)

    # ========= –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ `work_time` =========
    def update_schedule(message):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–¥–∞—á –≤ `config.py` –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫."""
        if not is_admin(message.from_user.id):
            bot.send_message(message.chat.id, "‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∏–∑–º–µ–Ω—è—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.")
            return

        new_times = message.text.strip().split()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ñ–æ—Ä–º–∞—Ç–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        corrected_times = []
        for time_value in new_times:
            match = re.match(r"^(\d{1,2}):(\d{2})$", time_value)
            if not match:
                bot.send_message(
                    message.chat.id,
                    "‚ö† –û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ 'H:MM' –∏–ª–∏ 'HH:MM'.\n"
                    "–ü—Ä–∏–º–µ—Ä: 9:30 –∏–ª–∏ 09:30\n"
                    "–ù–∞—á–Ω–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞, –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ–º–∞–Ω–¥—É /set_time."
                )
                return

            hours, minutes = match.groups()
            hours = hours.zfill(2)  # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–ª—å –ø–µ—Ä–µ–¥ –æ–¥–Ω–æ–∑–Ω–∞—á–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏
            corrected_times.append(f"{hours}:{minutes}")

        # **–ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º `work_time` –≤ config.py**
        config.work_time = corrected_times
        with open("config.py", "r", encoding="utf-8") as file:
            lines = file.readlines()

        for i, line in enumerate(lines):
            if line.startswith("work_time"):
                lines[i] = f"work_time = {corrected_times}\n"

        with open("config.py", "w", encoding="utf-8") as file:
            file.writelines(lines)

        # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º config.py
        importlib.reload(config)

        current_status = "‚úÖ –í–∫–ª—é—á–µ–Ω–∞" if config.status_work_time == "on" else "‚õî –í—ã–∫–ª—é—á–µ–Ω–∞"

        bot.send_message(message.chat.id, f"‚úÖ –í—Ä–µ–º—è –∏–∑–º–µ–Ω–µ–Ω–æ! –ù–æ–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ:\n" + "\n".join(config.work_time))
        bot.send_message(
            message.chat.id,
            f"üîÑ *–°—Ç–∞—Ç—É—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏:* {current_status}\n\n",
            parse_mode="Markdown",
        )

        # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
        restart_scheduler()