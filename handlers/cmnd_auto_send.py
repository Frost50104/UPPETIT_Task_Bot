
import importlib
import config
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton

def handle_cmnd_auto_send(bot, is_admin, restart_scheduler):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥—ã /auto_send"""

    # ========= –ö–æ–º–∞–Ω–¥–∞ /auto_send =========
    @bot.message_handler(commands=['auto_send'])
    def handle_auto_send(message):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏ –∑–∞–¥–∞—á –∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å –µ–≥–æ."""
        if not is_admin(message.from_user.id):
            bot.send_message(message.chat.id, "‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∏–∑–º–µ–Ω—è—Ç—å —Å—Ç–∞—Ç—É—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏.")
            return

        # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º config.py –ø–µ—Ä–µ–¥ –≤—ã–≤–æ–¥–æ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        importlib.reload(config)

        current_status = "‚úÖ –í–∫–ª—é—á–µ–Ω–∞" if config.status_work_time == "on" else "‚õî –í—ã–∫–ª—é—á–µ–Ω–∞"
        schedule_list = "\n".join(config.work_time)

        keyboard = InlineKeyboardMarkup()
        keyboard.add(
            InlineKeyboardButton("‚úÖ –î–∞", callback_data="change_auto_send"),
            InlineKeyboardButton("‚ùå –ù–µ—Ç", callback_data="cancel_auto_send")
        )

        bot.send_message(
            message.chat.id,
            f"üìÖ *–¢–µ–∫—É—â–µ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏:*\n{schedule_list}\n\n"
            f"üîÑ *–°—Ç–∞—Ç—É—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏:* {current_status}\n\n"
            f"–ñ–µ–ª–∞–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏?",
            parse_mode="Markdown",
            reply_markup=keyboard
        )

    # ========= –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π "–î–∞" / "–ù–µ—Ç" =========
    @bot.callback_query_handler(func=lambda call: call.data in ["change_auto_send", "cancel_auto_send"])
    def process_auto_send_change(call):
        """–ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏."""
        if not is_admin(call.from_user.id):
            bot.answer_callback_query(call.id, "‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∏–∑–º–µ–Ω—è—Ç—å —Å—Ç–∞—Ç—É—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏.")
            return

        if call.data == "cancel_auto_send":
            bot.edit_message_text("‚ùå –ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.", call.message.chat.id, call.message.message_id)
            return

        # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º config.py –ø–µ—Ä–µ–¥ –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º
        importlib.reload(config)

        new_status = "off" if config.status_work_time == "on" else "on"

        # –ß–∏—Ç–∞–µ–º config.py
        config_file = "config.py"
        with open(config_file, "r", encoding="utf-8") as file:
            config_content = file.readlines()

        # –û–±–Ω–æ–≤–ª—è–µ–º `status_work_time`
        for i, line in enumerate(config_content):
            if line.strip().startswith("status_work_time"):
                config_content[i] = f"status_work_time = '{new_status}'\n"
                break

        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π config.py
        with open(config_file, "w", encoding="utf-8") as file:
            file.writelines(config_content)

        # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º config.py –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
        importlib.reload(config)

        # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —Ä–∞—Å—Å—ã–ª–∫—É
        restart_scheduler()

        new_status_text = "‚úÖ –í–∫–ª—é—á–µ–Ω–∞" if new_status == "on" else "‚õî –í—ã–∫–ª—é—á–µ–Ω–∞"
        bot.edit_message_text(f"üîÑ –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏: {new_status_text}",
                              call.message.chat.id, call.message.message_id)
