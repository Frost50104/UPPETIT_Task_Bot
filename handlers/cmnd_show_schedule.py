from telebot import types
import config

# ========= –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Ä–∞—Å—Å—ã–ª–æ–∫ =========
DAYS_RU = {
    'monday': '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫',
    'tuesday': '–í—Ç–æ—Ä–Ω–∏–∫',
    'wednesday': '–°—Ä–µ–¥–∞',
    'thursday': '–ß–µ—Ç–≤–µ—Ä–≥',
    'friday': '–ü—è—Ç–Ω–∏—Ü–∞',
    'saturday': '–°—É–±–±–æ—Ç–∞',
    'sunday': '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ'
}

def translate_weekly_schedule(weekly_schedule):
    # –ü—Ä–∏–º–µ—Ä: [('monday', '10:00'), ('friday', '15:30')]
    result = []
    for day, time in weekly_schedule:
        day_ru = DAYS_RU.get(day.lower(), day)
        result.append(f"{day_ru} –≤ {time}")
    return '\n'.join(result) if result else '‚Äî'

def translate_monthly_schedule(monthly_schedule):
    # –ü—Ä–∏–º–µ—Ä: [(1, '10:00'), (15, '12:00')]
    result = []
    for day, time in sorted(monthly_schedule, key=lambda x: int(x[0])):
        result.append(f"{day} —á–∏—Å–ª–∞ –≤ {time}")
    return '\n'.join(result) if result else '‚Äî'

def format_tasks_and_groups(tasks_dict):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–ª–æ–≤–∞—Ä—å –∑–∞–¥–∞—á –∏ –≥—Ä—É–ø–ø –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π"""
    if not tasks_dict:
        return "–ù–µ—Ç –∑–∞–¥–∞—á"

    # –ü–æ–ª—É—á–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–∞–¥–∞—á–∏
    unique_tasks = set(tasks_dict.values())

    # –ï—Å–ª–∏ –∑–∞–¥–∞—á –Ω–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    if not unique_tasks:
        return "–ù–µ—Ç –∑–∞–¥–∞—á"

    # –ï—Å–ª–∏ –∑–∞–¥–∞—á–∞ –æ–¥–Ω–∞ –¥–ª—è –≤—Å–µ—Ö –≥—Ä—É–ø–ø, –≤—ã–≤–æ–¥–∏–º –µ—ë –æ–¥–∏–Ω —Ä–∞–∑
    if len(unique_tasks) == 1:
        task_text = next(iter(unique_tasks))

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π
        groups_info = []
        for group_name in tasks_dict.keys():
            # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã –≤ —á–∏—Ç–∞–µ–º–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
            readable_group_name = group_name.replace("task_group_", "–ì—Ä—É–ø–ø–∞ ")

            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ ID –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π –¥–ª—è —ç—Ç–æ–π –≥—Ä—É–ø–ø—ã
            recipients = config.performers_by_group.get(group_name, [])

            # –ù–∞—Ö–æ–¥–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã –∏–∑ —Å–ª–æ–≤–∞—Ä—è performers
            group_display_name = None
            for name, ids in config.performers.items():
                if set(ids) == set(recipients):
                    group_display_name = name
                    break

            group_info = group_display_name or readable_group_name
            groups_info.append(f"‚Ä¢ <b>{group_info}</b> ({len(recipients)} –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π)")

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç: —Å–Ω–∞—á–∞–ª–∞ –∑–∞–¥–∞—á–∞, –ø–æ—Ç–æ–º —Å–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø
        result = f"<b>–ó–∞–¥–∞—á–∞:</b> {task_text}\n\n<b>–ì—Ä—É–ø–ø—ã –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π:</b>\n" + '\n'.join(groups_info)
        return result

    # –ï—Å–ª–∏ –∑–∞–¥–∞—á–∏ —Ä–∞–∑–Ω—ã–µ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –≥—Ä—É–ø–ø (—á—Ç–æ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ —É—Å–ª–æ–≤–∏—é –∑–∞–¥–∞—á–∏),
    # –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—ã–≤–æ–¥–∞
    result = []
    for group_name, task_text in tasks_dict.items():
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã –≤ —á–∏—Ç–∞–µ–º–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
        readable_group_name = group_name.replace("task_group_", "–ì—Ä—É–ø–ø–∞ ")

        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ ID –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π –¥–ª—è —ç—Ç–æ–π –≥—Ä—É–ø–ø—ã
        recipients = config.performers_by_group.get(group_name, [])

        # –ù–∞—Ö–æ–¥–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã –∏–∑ —Å–ª–æ–≤–∞—Ä—è performers
        group_display_name = None
        for name, ids in config.performers.items():
            if set(ids) == set(recipients):
                group_display_name = name
                break

        group_info = group_display_name or readable_group_name
        result.append(f"‚Ä¢ <b>{group_info}</b>: {task_text} ({len(recipients)} –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π)")

    return '\n'.join(result) if result else "–ù–µ—Ç –∑–∞–¥–∞—á"

def handle_cmnd_show_schedule(bot, is_admin):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–æ–º–∞–Ω–¥—ã /show_schedule"""
    @bot.message_handler(commands=['show_schedule'])
    def handle_command_show_schedule(message: types.Message):
        if not is_admin(message.from_user.id):
            bot.send_message(message.chat.id, "‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ —Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç—É—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏.")
            return

        weekly_text = translate_weekly_schedule(config.weekly_schedule)
        monthly_text = translate_monthly_schedule(config.monthly_schedule)

        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∑–∞–¥–∞—á–∏ –∏ –≥—Ä—É–ø–ø—ã –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π
        daily_tasks_text = format_tasks_and_groups(config.daily_tasks)
        weekly_tasks_text = format_tasks_and_groups(config.weekly_tasks)
        monthly_tasks_text = format_tasks_and_groups(config.monthly_tasks)

        bot.send_message(
            message.chat.id,
            text=f'''
üóì <b>–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞:</b> {config.status_work_time}
–í—Ä–µ–º—è: {', '.join(config.work_time) if config.work_time else '‚Äî'}\n
{daily_tasks_text}

üìÜ <b>–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞:</b> {config.status_weekly}
–î–Ω–∏ –∏ –≤—Ä–µ–º—è: {weekly_text}\n
{weekly_tasks_text}

üìÖ <b>–ï–∂–µ–º–µ—Å—è—á–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞:</b> {config.status_monthly}
–î–∞—Ç—ã –∏ –≤—Ä–µ–º—è: {monthly_text}\n
{monthly_tasks_text}
''',
            parse_mode='HTML'
        )
