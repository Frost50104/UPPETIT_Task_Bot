from telebot import types
import config

# ========= –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Ä–∞—Å—Å—ã–ª–æ–∫ =========
DAYS_RU = {
    'monday': '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫',
    'tuesday': '–í—Ç–æ—Ä–Ω–∏–∫',
    'wednesday': '–°—Ä–µ–¥–∞',
    'thursday': '–ß–µ—Ç–≤–µ—Ä–≥',
    'friday': '–ü—è—Ç–Ω–∏—Ü–∞',
    'saturday': '–°—É–±–±–æ—Ç–∞',
    'sunday': '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ'
}

def translate_weekly_schedule(weekly_schedule):
    # –ü—Ä–∏–º–µ—Ä: [('monday', '10:00'), ('friday', '15:30')]
    result = []
    for day, time in weekly_schedule:
        day_ru = DAYS_RU.get(day.lower(), day)
        result.append(f"{day_ru} –≤ {time}")
    return '\n'.join(result) if result else '‚Äî'

def translate_monthly_schedule(monthly_schedule):
    # –ü—Ä–∏–º–µ—Ä: [(1, '10:00'), (15, '12:00')]
    result = []
    for day, time in sorted(monthly_schedule, key=lambda x: int(x[0])):
        result.append(f"{day} —á–∏—Å–ª–∞ –≤ {time}")
    return '\n'.join(result) if result else '‚Äî'

def handle_cmnd_show_schedule(bot, is_admin):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–æ–º–∞–Ω–¥—ã /show_schedule"""
    @bot.message_handler(commands=['show_schedule'])
    def handle_command_show_schedule(message: types.Message):
        if not is_admin(message.from_user.id):
            bot.send_message(message.chat.id, "‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ —Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç—É—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏.")
            return

        weekly_text = translate_weekly_schedule(config.weekly_schedule)
        monthly_text = translate_monthly_schedule(config.monthly_schedule)

        bot.send_message(
            message.chat.id,
            text=f'''
üóì <b>–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞:</b> {config.status_work_time}
–í—Ä–µ–º—è: {', '.join(config.work_time) if config.work_time else '‚Äî'}
    
üìÜ <b>–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞:</b> {config.status_weekly}
–î–Ω–∏ –∏ –≤—Ä–µ–º—è: {weekly_text}
    
üìÖ <b>–ï–∂–µ–º–µ—Å—è—á–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞:</b> {config.status_monthly}
–î–∞—Ç—ã –∏ –≤—Ä–µ–º—è: {monthly_text}
''',
            parse_mode='HTML'
        )