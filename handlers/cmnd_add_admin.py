
import importlib
import config
import re
import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, Message
from logger import log_action

def handle_cmnd_add_admin(bot, is_admin, task_data):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥—ã /add_admin"""
    # ========= –ö–æ–º–∞–Ω–¥–∞ /add_admin =========
    @bot.message_handler(commands=['add_admin'])
    def handle_add_admin(message):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."""
        if not is_admin(message.from_user.id):
            bot.send_message(message.chat.id, "‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.")
            return

        # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º config.py –ø–µ—Ä–µ–¥ –≤—ã–≤–æ–¥–æ–º —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
        importlib.reload(config)

        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–µ–∫—É—â–∏—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
        admin_list = []
        for admin_id in config.ADMIN_ID:
            try:
                user = bot.get_chat(admin_id)
                username = f"@{user.username}" if user.username else f"ID: {admin_id}"
            except telebot.apihelper.ApiTelegramException:
                username = f"ID: {admin_id} (‚ùå –Ω–µ –Ω–∞–π–¥–µ–Ω)"

            admin_list.append(f"üë§ {username}")

        admin_text = "\n".join(admin_list) if admin_list else "‚ùå –ù–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤."

        # –°–æ–∑–¥–∞–µ–º inline-–∫–Ω–æ–ø–∫–∏
        keyboard = InlineKeyboardMarkup()
        keyboard.add(
            InlineKeyboardButton("‚úÖ –î–∞", callback_data="confirm_add_admin"),
            InlineKeyboardButton("‚ùå –ù–µ—Ç", callback_data="cancel_add_admin")
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å HTML-—Ä–∞–∑–º–µ—Ç–∫–æ–π
        bot.send_message(
            message.chat.id,
            f"üîπ <b>–°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:</b>\n{admin_text}\n\n"
            "–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞?",
            parse_mode="HTML",
            reply_markup=keyboard
        )

    # ========= –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ "–î–∞" / "–ù–µ—Ç" =========
    @bot.callback_query_handler(func=lambda call: call.data in ["confirm_add_admin", "cancel_add_admin"])
    def process_add_admin_choice(call):
        if not is_admin(call.from_user.id):
            bot.answer_callback_query(call.id, "‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∏–∑–º–µ–Ω—è—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.")
            return

        if call.data == "confirm_add_admin":
            bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=None)
            bot.send_message(call.message.chat.id, "‚úè –£–∫–∞–∂–∏—Ç–µ ID –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:")
            bot.register_next_step_handler(call.message, process_admin_id)

        elif call.data == "cancel_add_admin":
            bot.edit_message_text("‚ùå –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ.", call.message.chat.id,
                                  call.message.message_id)

    # ========= –û–±—Ä–∞–±–æ—Ç–∫–∞ ID –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ =========
    def process_admin_id(message):
        """–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ —Å–ø–∏—Å–æ–∫ `ADMIN_ID` –≤ `config.py`."""
        if not is_admin(message.from_user.id):
            bot.send_message(message.chat.id, "‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∏–∑–º–µ–Ω—è—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.")
            return

        try:
            new_admin_id = int(message.text.strip())  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ int
        except ValueError:
            bot.send_message(message.chat.id,
                             "‚ö† –û—à–∏–±–∫–∞: ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ —Å –∫–æ–º–∞–Ω–¥–æ–π /add_admin.")
            return

        # –ß–∏—Ç–∞–µ–º config.py
        config_file = "config.py"
        with open(config_file, "r", encoding="utf-8") as file:
            config_content = file.readlines()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —ç—Ç–æ—Ç –∞–¥–º–∏–Ω –≤ —Å–ø–∏—Å–∫–µ
        if new_admin_id in config.ADMIN_ID:
            bot.send_message(
                message.chat.id,
                f"‚ö† –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID <code>{new_admin_id}</code> —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.",
                parse_mode="HTML"
            )
            return

        # –û–±–Ω–æ–≤–ª—è–µ–º `ADMIN_ID`
        for i, line in enumerate(config_content):
            if line.strip().startswith("ADMIN_ID"):
                match = re.search(r"\[(.*?)\]", line)
                if match:
                    existing_ids = match.group(1).strip()
                    existing_ids_list = [int(x.strip()) for x in existing_ids.split(",") if x.strip().isdigit()]
                else:
                    existing_ids_list = []

                # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
                existing_ids_list.append(new_admin_id)
                updated_ids = ", ".join(map(str, existing_ids_list))

                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –≤ —Ñ–∞–π–ª–µ
                config_content[i] = f"ADMIN_ID = [{updated_ids}]\n"
                break
        else:
            bot.send_message(message.chat.id, "‚ö† –û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –≤ config.py",
                             parse_mode="HTML")
            return

        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π config.py
        with open(config_file, "w", encoding="utf-8") as file:
            file.writelines(config_content)

        # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º config.py, —á—Ç–æ–±—ã –±–æ—Ç —Å—Ä–∞–∑—É –≤–∏–¥–µ–ª –∏–∑–º–µ–Ω–µ–Ω–∏—è
        importlib.reload(config)

        # Log the action with the added admin ID
        log_action(
            user_id=message.from_user.id,
            action="–î–æ–±–∞–≤–∏–ª –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞",
            details=f"ID –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {new_admin_id}",
            admin_name=message.from_user.first_name
        )

        bot.send_message(
            message.chat.id,
            f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID <code>{new_admin_id}</code> –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.",
            parse_mode="HTML"
        )
