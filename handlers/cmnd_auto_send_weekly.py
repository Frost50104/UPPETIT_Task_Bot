import importlib
import config
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton

def handle_cmnd_auto_send_weekly(bot, is_admin, restart_scheduler):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥—ã /auto_send_weekly"""

    # ========= –ö–æ–º–∞–Ω–¥–∞ /auto_send_weekly =========
    @bot.message_handler(commands=['auto_send_weekly'])
    def handle_auto_send_weekly(message):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏ –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –µ–≥–æ –∏–∑–º–µ–Ω–∏—Ç—å."""
        if not is_admin(message.from_user.id):
            bot.send_message(message.chat.id, "‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∏–∑–º–µ–Ω—è—Ç—å —Å—Ç–∞—Ç—É—Å –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏.")
            return

        importlib.reload(config)

        # –ü–µ—Ä–µ–≤–æ–¥ –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏ –Ω–∞ —Ä—É—Å—Å–∫–∏–π
        day_translate_reverse = {
            "monday": "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫",
            "tuesday": "–í—Ç–æ—Ä–Ω–∏–∫",
            "wednesday": "–°—Ä–µ–¥–∞",
            "thursday": "–ß–µ—Ç–≤–µ—Ä–≥",
            "friday": "–ü—è—Ç–Ω–∏—Ü–∞",
            "saturday": "–°—É–±–±–æ—Ç–∞",
            "sunday": "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"
        }

        schedule_list = "\n".join([
            f"{day_translate_reverse.get(day, day)} –≤ {time}"
            for day, time in config.weekly_schedule
        ])

        current_status = "‚úÖ –í–∫–ª—é—á–µ–Ω–∞" if config.status_weekly == "on" else "‚õî –í—ã–∫–ª—é—á–µ–Ω–∞"

        keyboard = InlineKeyboardMarkup()
        keyboard.add(
            InlineKeyboardButton("‚úÖ –î–∞", callback_data="change_weekly_status"),
            InlineKeyboardButton("‚ùå –ù–µ—Ç", callback_data="cancel_weekly_status")
        )

        bot.send_message(
            message.chat.id,
            f"üìÖ <b>–ù–µ–¥–µ–ª—å–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ:</b>\n{schedule_list}\n\n"
            f"üîÑ <b>–°—Ç–∞—Ç—É—Å –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏:</b> {current_status}\n\n"
            f"–ñ–µ–ª–∞–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏?",
            parse_mode="HTML",
            reply_markup=keyboard
        )

    # ========= –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è /auto_send_weekly =========
    @bot.callback_query_handler(func=lambda call: call.data in ["change_weekly_status", "cancel_weekly_status"])
    def process_weekly_status_change(call):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏."""
        if not is_admin(call.from_user.id):
            bot.answer_callback_query(call.id, "‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∏–∑–º–µ–Ω—è—Ç—å —Å—Ç–∞—Ç—É—Å.")
            return

        if call.data == "cancel_weekly_status":
            bot.edit_message_text("‚ùå –ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.", call.message.chat.id, call.message.message_id)
            return

        importlib.reload(config)
        new_status = "off" if config.status_weekly == "on" else "on"

        # –û–±–Ω–æ–≤–ª—è–µ–º config.py
        with open("config.py", "r", encoding="utf-8") as file:
            config_content = file.readlines()

        for i, line in enumerate(config_content):
            if line.strip().startswith("status_weekly"):
                config_content[i] = f"status_weekly = '{new_status}'\n"
                break

        with open("config.py", "w", encoding="utf-8") as file:
            file.writelines(config_content)

        importlib.reload(config)
        restart_scheduler()

        new_status_text = "‚úÖ –í–∫–ª—é—á–µ–Ω–∞" if new_status == "on" else "‚õî –í—ã–∫–ª—é—á–µ–Ω–∞"
        bot.edit_message_text(f"üîÑ –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏: {new_status_text}",
                              call.message.chat.id, call.message.message_id)