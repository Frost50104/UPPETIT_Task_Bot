# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã set_group_name
import re
import importlib
from telebot.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
import config

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –∏–Ω–¥–µ–∫—Å–æ–≤ –∏ –∏–º–µ–Ω –≥—Ä—É–ø–ø
group_index_map = {str(index): name for index, name in enumerate(config.performers.keys())}

def handle_cmnd_set_group_name(bot, is_admin):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥—ã /set_group_name"""

    @bot.message_handler(commands=['set_group_name'])
    def set_group_name(message: Message):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã."""
        if not is_admin(message.from_user.id):
            bot.send_message(message.chat.id, "‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∏–∑–º–µ–Ω—è—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø.")
            return

        keyboard = InlineKeyboardMarkup()
        keyboard.add(
            InlineKeyboardButton("‚úÖ –î–∞", callback_data="confirm_set_group_name"),
            InlineKeyboardButton("‚ùå –ù–µ—Ç", callback_data="cancel_set_group_name")
        )

        bot.send_message(
            message.chat.id,
            "–•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã?",
            parse_mode="HTML",
            reply_markup=keyboard
        )

    @bot.callback_query_handler(func=lambda call: call.data == "cancel_set_group_name")
    def cancel_set_group_name(call):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–∫–∞–∑ –æ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã."""
        bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=None)
        bot.send_message(call.message.chat.id, "üö´ –°–º–µ–Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã –æ—Ç–º–µ–Ω–µ–Ω–∞.")

    @bot.callback_query_handler(func=lambda call: call.data == "confirm_set_group_name")
    def process_set_group_name_choice(call):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–∏–∑–º–µ–Ω—è—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ –Ω–µ—Ç)."""
        if not is_admin(call.from_user.id):
            bot.answer_callback_query(call.id, "‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∏–∑–º–µ–Ω—è—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø.")
            return

        bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=None)

        importlib.reload(config)  # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ

        global group_index_map
        group_index_map = {str(index): name for index, name in enumerate(config.performers.keys())}

        keyboard = InlineKeyboardMarkup()
        for index, group_name in group_index_map.items():
            keyboard.add(InlineKeyboardButton(group_name, callback_data=f"select_group_to_rename|{index}"))

        keyboard.add(InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_group_rename"))

        bot.send_message(
            call.message.chat.id,
            "–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É, —É –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∏–º—è:",
            parse_mode="HTML",
            reply_markup=keyboard
        )

    @bot.callback_query_handler(func=lambda call: call.data == "cancel_group_rename")
    def cancel_group_rename(call):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–º–µ–Ω—É –≤—ã–±–æ—Ä–∞ –≥—Ä—É–ø–ø—ã."""
        bot.edit_message_text("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã –æ—Ç–º–µ–Ω–µ–Ω–∞.", call.message.chat.id, call.message.message_id)

    @bot.callback_query_handler(func=lambda call: call.data.startswith("select_group_to_rename"))
    def select_group_to_rename(call):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—É—é –≥—Ä—É–ø–ø—É –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –Ω–æ–≤–æ–µ –∏–º—è."""
        _, group_index = call.data.split("|")

        importlib.reload(config)
        group_index_map = {str(index): name for index, name in enumerate(config.performers.keys())}

        old_group_name = group_index_map.get(group_index)

        if not old_group_name or old_group_name not in config.performers:
            bot.send_message(call.message.chat.id, "‚ö† –û—à–∏–±–∫–∞: –≥—Ä—É–ø–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", parse_mode="HTML")
            return

        bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=None)

        bot.send_message(
            call.message.chat.id,
            f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –≥—Ä—É–ø–ø—ã <b>{old_group_name}</b>:",
            parse_mode="HTML"
        )

        bot.register_next_step_handler(call.message, process_new_group_name, old_group_name)

    def process_new_group_name(message, old_group_name):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã –≤ config.py."""
        chat_id = message.chat.id
        new_group_name = message.text.strip()

        if not new_group_name:
            bot.send_message(chat_id, "‚ö† –û—à–∏–±–∫–∞: –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /set_group_name.")
            return

        config_file = "config.py"
        with open(config_file, "r", encoding="utf-8") as file:
            config_content = file.readlines()

        new_config_content = []
        group_updated = False

        for line in config_content:
            if line.strip().startswith("performers = {"):
                new_config_content.append(line)
                continue

            match = re.match(r"\s*'(.*?)':\s*(performers_list_\d+),", line)
            if match:
                current_group_name, group_var = match.groups()
                if current_group_name == old_group_name:
                    new_config_content.append(f"    '{new_group_name}': {group_var},\n")
                    group_updated = True
                    continue

            new_config_content.append(line)

        if not group_updated:
            bot.send_message(chat_id, f"‚ö† –û—à–∏–±–∫–∞: –≥—Ä—É–ø–ø–∞ <b>{old_group_name}</b> –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ config.py", parse_mode="HTML")
            return

        with open(config_file, "w", encoding="utf-8") as file:
            file.writelines(new_config_content)

        importlib.reload(config)

        bot.send_message(
            chat_id,
            f"‚úÖ –ù–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã <b>{old_group_name}</b> –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ <b>{new_group_name}</b>!",
            parse_mode="HTML"
        )

        updated_groups = "\n".join([f"üîπ <b>{group}</b>" for group in config.performers.keys()])
        bot.send_message(
            chat_id,
            f"üîÑ <b>–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø:</b>\n{updated_groups}",
            parse_mode="HTML"
        )