import telebot
from telebot.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
import config

def handle_photo_submission(bot, task_data):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ç–æ –æ—Ç –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π –ø–∞–Ω–µ–ª–∏"""
    # ========= –ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–æ—Ç–æ –æ—Ç –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è =========
    @bot.message_handler(content_types=['photo'])
    def receive_photo(message):
        user_id = message.from_user.id
        if user_id not in sum(config.control_panel.keys(), ()):  # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å –∏–∑ –æ–¥–Ω–æ–π –∏–∑ –≥—Ä—É–ø–ø
            bot.send_message(message.chat.id, "‚õî –í—ã –Ω–µ —á–∏—Å–ª–∏—Ç–µ—Å—å –≤ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π –ø–∞–Ω–µ–ª–∏.", parse_mode="HTML")
            return

        photo = message.photo[-1].file_id

        # –ü–æ–ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏ –¥–ª—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è; –µ—Å–ª–∏ –Ω–µ—Ç ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫—É.
        task_text = task_data.get(user_id, {}).get("task_text", "_")
        first_name = message.from_user.first_name or f"ID: {user_id}"

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –≤ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–π —á–∞—Ç –±–µ–∑ inline-–∫–Ω–æ–ø–æ–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ID —Å–æ–æ–±—â–µ–Ω–∏—è
        sent_message = bot.send_photo(
            config.control_chat_id,
            photo,
            caption=f"üìù <b>–ó–∞–¥–∞—á–∞:</b> {task_text}\nüë§ <b>{first_name}</b>",
            parse_mode="HTML"
        )

        # –§–æ—Ä–º–∏—Ä—É–µ–º inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ "‚úÖ –ü—Ä–∏–Ω—è—Ç—å" –∏ "‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å"
        keyboard = InlineKeyboardMarkup()
        keyboard.add(
            InlineKeyboardButton("‚úÖ –ü—Ä–∏–Ω—è—Ç—å", callback_data=f"accept_{sent_message.message_id}_{user_id}"),
            InlineKeyboardButton("‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"reject_{sent_message.message_id}_{user_id}")
        )

        # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–º —á–∞—Ç–µ, –¥–æ–±–∞–≤–ª—è—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        bot.edit_message_reply_markup(chat_id=config.control_chat_id, message_id=sent_message.message_id,
                                      reply_markup=keyboard)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Å–æ–æ–±—â–µ–Ω–∏–∏ –≤ task_data (–∫–ª—é—á ‚Äì ID —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–º —á–∞—Ç–µ)
        task_data[sent_message.message_id] = {
            "user_id": user_id,
            "user_message_id": message.message_id,
            "control_chat_id": config.control_chat_id,
            "task_text": task_text
        }

        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, —á—Ç–æ —Ñ–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
        bot.send_message(message.chat.id, "‚úÖ <b>–§–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É!</b>", parse_mode="HTML")

    # ========= –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –≤ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–º —á–∞—Ç–µ =========
    @bot.callback_query_handler(func=lambda call: call.data.startswith(("accept_", "reject_")))
    def process_verification(call):
        admin_id = call.from_user.id
        if not admin_id in config.ADMIN_ID:
            bot.answer_callback_query(call.id, "‚õî –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ–¥–æ–±—Ä—è—Ç—å –∏–ª–∏ –æ—Ç–∫–ª–æ–Ω—è—Ç—å —Ñ–æ—Ç–æ.")
            return
        action, control_msg_id, user_id = call.data.split("_")
        control_msg_id = int(control_msg_id)
        user_id = int(user_id)
        if control_msg_id not in task_data:
            bot.answer_callback_query(call.id, "‚ö† –î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
            return
        stored = task_data[control_msg_id]
        try:
            bot.edit_message_reply_markup(chat_id=stored["control_chat_id"], message_id=control_msg_id,
                                          reply_markup=None)
        except telebot.apihelper.ApiTelegramException:
            bot.answer_callback_query(call.id, "‚ö† –û—à–∏–±–∫–∞: —Å–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ –∏–∑–º–µ–Ω–µ–Ω–æ –∏–ª–∏ —É–¥–∞–ª–µ–Ω–æ.")
            return
        if action == "accept":
            bot.send_message(
                user_id,
                "–§–æ—Ç–æ –ø—Ä–∏–Ω—è—Ç–æ! –°–ø–∞—Å–∏–±–æ",
                reply_to_message_id=stored["user_message_id"],
                parse_mode="Markdown"
            )
            bot.answer_callback_query(call.id, "–§–æ—Ç–æ –ø—Ä–∏–Ω—è—Ç–æ!")
            del task_data[control_msg_id]
        elif action == "reject":
            bot.send_message(
                user_id,
                "–§–æ—Ç–æ –Ω–µ –ø—Ä–∏–Ω—è—Ç–æ. –ü–µ—Ä–µ–¥–µ–ª–∞–π—Ç–µ!",
                reply_to_message_id=stored["user_message_id"],
                parse_mode="Markdown"
            )
            bot.answer_callback_query(call.id, "–§–æ—Ç–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ!")
            del task_data[control_msg_id]
            request_new_photo(bot, user_id)

# ========= –ó–∞–ø—Ä–æ—Å –Ω–æ–≤–æ–≥–æ —Ñ–æ—Ç–æ =========
def request_new_photo(bot, user_id):
    bot.send_message(user_id, "üì∑ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ —Ñ–æ—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è.")
