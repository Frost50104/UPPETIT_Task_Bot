import telebot
from telebot.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
import config
from task_storage import update_task_status, load_tasks

def handle_photo_submission(bot):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ç–æ –æ—Ç –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π –ø–∞–Ω–µ–ª–∏"""

    @bot.message_handler(content_types=['photo'])
    def receive_photo(message: Message):
        user_id = message.from_user.id

        # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π –ø–∞–Ω–µ–ª–∏
        if user_id not in sum(config.control_panel.keys(), ()):
            bot.send_message(message.chat.id, "‚õî –í—ã –Ω–µ —á–∏—Å–ª–∏—Ç–µ—Å—å –≤ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π –ø–∞–Ω–µ–ª–∏.", parse_mode="HTML")
            return

        # –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ —É—Å–ª–æ–≤–∏–µ ‚Äî —Ñ–æ—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∫–∞–∫ –æ—Ç–≤–µ—Ç
        if not message.reply_to_message:
            bot.send_message(message.chat.id, "‚ö† –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–¥–∞—á–µ–π.")
            return

        original_message_id = message.reply_to_message.message_id
        tasks = load_tasks()
        uid = str(user_id)

        if uid not in tasks:
            bot.send_message(message.chat.id, "‚ö† –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á.")
            return

        # –ò—â–µ–º –ø–æ message_id –∏ reminder_message_id:
        matching_task = next(
            (task for task in tasks[uid]
             if task["message_id"] == original_message_id or task.get("reminder_message_id") == original_message_id),
            None
        )
        if not matching_task:
            bot.send_message(message.chat.id, "‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–ø–æ—Å—Ç–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ —Å –∑–∞–¥–∞—á–µ–π. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–¥–∞–Ω–∏–µ–º.")
            return

        photo = message.photo[-1].file_id
        task_text = matching_task["task_text"]
        first_name = message.from_user.first_name or f"ID: {user_id}"

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –≤ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–π —á–∞—Ç
        sent_message = bot.send_photo(
            config.control_chat_id,
            photo,
            caption=f"üìù <b>–ó–∞–¥–∞—á–∞:</b> {task_text}\nüë§ <b>{first_name}</b>",
            parse_mode="HTML"
        )

        # –î–æ–±–∞–≤–ª—è–µ–º inline-–∫–Ω–æ–ø–∫–∏
        keyboard = InlineKeyboardMarkup()
        keyboard.add(
            InlineKeyboardButton("‚úÖ –ü—Ä–∏–Ω—è—Ç—å", callback_data=f"accept_{sent_message.message_id}_{user_id}_{original_message_id}"),
            InlineKeyboardButton("‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"reject_{sent_message.message_id}_{user_id}_{original_message_id}")
        )

        bot.edit_message_reply_markup(
            chat_id=config.control_chat_id,
            message_id=sent_message.message_id,
            reply_markup=keyboard
        )

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏
        update_task_status(user_id, original_message_id, "–Ω–∞ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏", control_msg_id=sent_message.message_id)

        bot.send_message(message.chat.id, "‚úÖ <b>–§–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É!</b>", parse_mode="HTML")

    @bot.callback_query_handler(func=lambda call: call.data.startswith(("accept_", "reject_")))
    def process_verification(call: CallbackQuery):
        admin_id = call.from_user.id
        if admin_id not in config.ADMIN_ID:
            bot.answer_callback_query(call.id, "‚õî –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ–¥–æ–±—Ä—è—Ç—å –∏–ª–∏ –æ—Ç–∫–ª–æ–Ω—è—Ç—å —Ñ–æ—Ç–æ.")
            return

        try:
            action, control_msg_id, user_id, task_msg_id = call.data.split("_")
            control_msg_id = int(control_msg_id)
            user_id = int(user_id)
            task_msg_id = int(task_msg_id)
        except ValueError:
            bot.answer_callback_query(call.id, "‚ö† –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö.")
            return

        # –£–¥–∞–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        try:
            bot.edit_message_reply_markup(chat_id=config.control_chat_id, message_id=control_msg_id, reply_markup=None)
        except telebot.apihelper.ApiTelegramException:
            pass  # —Å–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ

        if action == "accept":
            update_task_status(user_id, task_msg_id, "–≤—ã–ø–æ–ª–Ω–µ–Ω–∞")
            bot.send_message(user_id, "‚úÖ –§–æ—Ç–æ –ø—Ä–∏–Ω—è—Ç–æ! –°–ø–∞—Å–∏–±–æ –∑–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏.", parse_mode="HTML")
            bot.answer_callback_query(call.id, "–§–æ—Ç–æ –ø—Ä–∏–Ω—è—Ç–æ!")
        elif action == "reject":
            update_task_status(user_id, task_msg_id, "–Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞")
            bot.send_message(user_id, "‚ùå –§–æ—Ç–æ –Ω–µ –ø—Ä–∏–Ω—è—Ç–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–¥–µ–ª–∞–π—Ç–µ –∑–∞–¥–∞—á—É –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ —Ñ–æ—Ç–æ, –æ—Ç–≤–µ—Ç–∏–≤ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–¥–∞—á–µ–π.", parse_mode="HTML", reply_to_message_id=task_msg_id)
            bot.answer_callback_query(call.id, "–§–æ—Ç–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ!")
            # request_new_photo(bot, user_id, task_msg_id)

# def request_new_photo(bot, user_id, message_id):
#     bot.send_message(user_id, "üì∑ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ —Ñ–æ—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤ –æ—Ç–≤–µ—Ç –Ω–∞ –∑–∞–¥–∞—á—É.", reply_to_message_id=message_id)